Non-Linear Modelling And Positioning (NLMAP) Library
====================================================

This is the source code for the software used in our paper:

Andrew Rice and Robert Harle. Evaluating Lateration-Based Positioning Algorithms for Fine-Grained Tracking. Joint Workshop on Foundations of Mobile Computing (DIAL-M-POMC), pages 54â€“61, 2005

Abstract: Accurate, dependable location information enables new services to users and efficient message routing within a sensor network. Fine-grained location data are often degraded by prevalent multipath and varying transmission channel characteristics. Successful positioning systems have used over-constrained sensor data to increase resilience to these problems and improve the accuracy of the location information produced. In this paper we evaluate a selection of commonly used algorithms for range-based (lateration) measurement data. We consider their accuracy, dependability, and computational requirements. The evaluation is performed using data collected over an extended period using an established indoor positioning system that locates active tags using the propagation of ultrasound from tag to a matrix of static sensors distributed throughout a 550m2 office floor space. We identify algorithms with successful multipath rejection and highlight the importance of the sensors' geometric configuration. This is particularly pertinent when considering positioning near cell boundaries in the sensor network. We introduce two new metrics to characterise the dependability of positioning algorithms.

http://www.cl.cam.ac.uk/~acr31/pubs/rice-positioning.pdf


What is NLMAP?
--------------

The files distributed with this README constitute the NLMAP
library. This is a small C++ library that can non-linearly model any
data using the Levenberg-Marquardt method i.e. fit a non-linear
function to a data series and estimate the fit. In particular it
provides functions to use the technique to position objects using
multilateration or multiangulation.

History of NLMAP 
---------------- 

I wrote NLMAP following the realisation that very few people seem
able to write robust multilateration algorithms that gave the best
results from their data. Having worked with a high accuracy
positioning system during my PhD I decided to write an algorithm from
scratch, free of intellectual property issues and make it generally
available.

Requirements
------------

NLMAP requires little other than a standards-compliant C++ compiler


Compilation
-----------

It may be neccessary to generate the Makefile(s) using autoconf/automake if they are not present in your distribution:

libtoolize --force
aclocal
autoconf
automake -a

After this, compilation should be as simple as:

./configure --prefix=/usr/local
make
make install

